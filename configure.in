#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT([aMule],[SVN],[admin@amule.org])
AC_CANONICAL_HOST
AM_INIT_AUTOMAKE

AC_CONFIG_SRCDIR([src/amule.cpp])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE

# Removing -fomit since it causes problems with CryptoPP
CFLAGS="`echo $CFLAGS | sed "s/-fomit-frame-pointer//g"`"
CXXFLAGS="`echo $CXXFLAGS | sed "s/-fomit-frame-pointer//g"`"

# System detection, need AC_CANONICAL_HOST
case "${host_os}" in
"")
	SYS=unknown
	;;
darwin*)
	SYS=darwin
	CFLAGS="${CFLAGS} -no-cpp-precomp -D_INTL_REDIRECT_MACROS -DNOPCH";
	LDFLAGS="$LDFLAGS -bind_at_load"
	touch src/Scanner.cpp
	;;
openbsd*) 
	SYS=openbsd
	LIBS="$LIBS -L/usr/local/lib"
	X11LIBS="-lX11 -L/usr/X11R6/lib"
	CXXFLAGS=" $CXXFLAGS -D__OPENBSD__"
	if test "$DEBUG_FLAGS" != ""; then
		DEBUG_FLAGS="-Wall -g -fno-inline -D__DEBUG__"
	fi
	;;
*cygwin* | *mingw32*)
	SYS=win32
	CFLAGS="$CFLAGS -DNOMINMAX"
	CXXFLAGS="$CXXFLAGS -DNOMINMAX"
	;;
solaris*)
	RESOLV_LIB="-lresolv -lnsl"
	X11LIBS="-lX11"
	LIBS="$LIBS -lrt"
esac

AC_SUBST(RESOLV_LIB)
AC_SUBST(X11LIBS)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_CC
AC_PROG_CPP
AC_PROG_AWK
AS_IF([test "$cross_compiling" = yes], [AC_PROG_BUILD_CC], [BUILD_CC="$CC" ; BUILD_EXEEXT=$EXEEXT])
AC_PROG_EGREP
AC_PROG_MAKE_SET
AC_PROG_LEX
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC

# Find the right ranlib, even when cross-compiling
# And for some other tools for cross compilation
AC_CHECK_TOOL(RANLIB, ranlib)
AC_CHECK_TOOL(STRIP, strip)
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(LD, ld)

#
# Add args to configure
#
AC_ARG_ENABLE(
	[ccache],
	[AS_HELP_STRING(
		[--enable-ccache],
		[enable ccache support for fast recompilation])],
	[ccache=$enableval], [ccache=no])

AC_ARG_ENABLE(
	[debug],
	[AS_HELP_STRING(
		[--disable-debug],
		[disable additional debugging output])],
	[USE_DEBUG=$enableval], [USE_DEBUG=yes])

AC_ARG_ENABLE(
	[optimize],
	[AS_HELP_STRING(
		[--enable-optimize],
		[enable code optimizing])],
	[USE_OPTIMIZE=$enableval], [USE_OPTIMIZE=no])

AC_ARG_ENABLE(
	[profile],
	[AS_HELP_STRING(
		[--enable-profile],
		[enable code profiling])],
	[USE_PROFILE=$enableval], [USE_PROFILE=no])

AC_ARG_ENABLE(
	[static],
	[AS_HELP_STRING(
		[--enable-static],
		[produce a statically linked executable])],
	[USE_DEBUG_STATIC=$enableval], [USE_DEBUG_STATIC=no])

AC_ARG_ENABLE(
	[monolithic],
	[AS_HELP_STRING(
		[--disable-monolithic],
		[disable building of the monolithic aMule app])],
	[MONOLITHIC=$enableval], [MONOLITHIC=yes])

AC_ARG_ENABLE(
	[amule-daemon],
	[AS_HELP_STRING(
		[--enable-amule-daemon],
		[compile aMule daemon version])],
	[AMULE_DAEMON=$enableval], [AMULE_DAEMON=no])

AC_ARG_ENABLE(
	[amulecmd],
	[AS_HELP_STRING(
		[--enable-amulecmd],
		[compile aMule command line client])],
	[AMULECMD=$enableval], [AMULECMD=no])

AC_ARG_ENABLE(
	[webserver],
	[AS_HELP_STRING(
		[--enable-webserver],
		[compile aMule WebServer])],
	[WEB=$enableval], [WEB=no])

AC_ARG_ENABLE(
	[amule-gui],
	[AS_HELP_STRING(
		[--enable-amule-gui],
		[compile aMule remote GUI (EXPERIMENTAL)])],
	[AMULE_GUI=$enableval], [AMULE_GUI=no])

AC_ARG_ENABLE(
	[cas],
	[AS_HELP_STRING(
		[--enable-cas],
		[compile C aMule Statistics])],
	[CAS=$enableval], [CAS=no])

AC_ARG_ENABLE(
	[wxcas],
	[AS_HELP_STRING(
		[--enable-wxcas],
		[compile aMule GUI Statistics])],
	[WXCAS=$enableval], [WXCAS=no])

AC_ARG_ENABLE(
	[ed2k],
	[AS_HELP_STRING(
		[--disable-ed2k],
		[don't compile aMule ed2k links handler])],
	[ED2K=$enableval], [ED2K=yes])

AC_ARG_ENABLE(
	[alc],
	[AS_HELP_STRING(
		[--enable-alc],
		[compile aMuleLinkCreator GUI version])],
	[ALC=$enableval], [ALC=no])
	      
AC_ARG_ENABLE(
	[alcc],
	[AS_HELP_STRING(
		[--enable-alcc],
		[compile aMuleLinkCreator for console])],
	[ALCC=$enableval], [ALCC=no])

AC_ARG_ENABLE(
	[monolithic],
	[AS_HELP_STRING(
		[--disable-monolithic],
		[disable building of the monolithic aMule app])],
	[MONOLITHIC=$enableval], [MONOLITHIC=yes])

AC_ARG_ENABLE(
	[upnp],
	[AS_HELP_STRING(
		[--disable-upnp],
		[do not compile UPnP code])],
	[ENABLE_UPNP=$enableval], [ENABLE_UPNP=yes])

AC_ARG_ENABLE(
	[geoip],
	[AS_HELP_STRING(
		[--enable-geoip],
		[compile with GeoIP IP2Country library])],
	[ENABLE_IP2COUNTRY=$enableval], [ENABLE_IP2COUNTRY=no])

AC_ARG_WITH(
	[geoip-headers],
	AS_HELP_STRING([--with-geoip-headers=DIR],
		[GeoIP include files location]),
	[GEOIP_INCLUDE="-I$withval"])

AC_ARG_WITH(
	[geoip-lib],
	AS_HELP_STRING([--with-geoip-lib=DIR],
		[GeoIP library location]),
	[GEOIP_LIB="-L$withval $GEOIP_LIB"])

AC_ARG_WITH(
	[geoip-static],
	AS_HELP_STRING([--with-geoip-static],
		[Explicitly link GeoIP statically (default=no)]),
	[if test "$withval" != "no"; then
		GEOIP_LIB="-Wl,-Bstatic $GEOIP_LIB -Wl,-Bdynamic"
	fi])

AC_ARG_WITH(
	[denoise-level],
	[AS_HELP_STRING(
		[--with-denoise-level=<level>],
		[Specifies denoising level (0-4):])
AS_HELP_STRING([], [0 - Do nothing])
AS_HELP_STRING([], [4 - Suppress all normal output])
AS_HELP_STRING([], [(for more information see src/utils/scripts/denoiser.rules)])
	],
	[denoiselevel="$withval"], [denoiselevel=yes])

dnl Default is yes, because they're most likely compatible.
dnl However, this is only used when cross-compiling.
AC_ARG_WITH(
	[gnu-malloc],
	[AS_HELP_STRING([--without-gnu-malloc],
		[Don't assume that we use GNU libc compatible malloc/realloc when cross-compiling])],
	[gnumalloc=$withval], [gnumalloc=yes])

AC_ARG_WITH(
	[language],
	[AS_HELP_STRING([--with-language=<langs>],
		[Specify a comma-separated list of languages you want to have installed. See po/LINGUAS for available languages])],
	[AS_IF([test "$withval" = "all"], [LINGUAS='%UNSET%'], [LINGUAS="`echo $withval | sed -e 's/,/ /g'`"])])

# Checking for libs before all other stuff to break
# configure as soon as possible in case of a missing one
# to avoid losing too much time

# Sets gettext version.
AM_GNU_GETTEXT_VERSION(0.11.5)

# Check for zlib
AC_OPTIONS_ZLIB
AC_CHECK_ZLIB([1.1.4], , [AC_MSG_ERROR([zlib >= 1.1.4 is required for aMule])])

if test x$CAS = xyes -o x$WEB = xyes; then
# Check for gd
AM_OPTIONS_GDLIBCONFIG
AM_PATH_GDLIBCONFIG([2.0.0],
[
	CAS_DEFS="-D__GD__"
	GDLIB_LIBS="-lgd $GDLIB_LIBS"
], [
    AC_MSG_NOTICE([
	WARNING: gd-lib >= 2.0.0, or a functional gd.h (from gd-devel) not found.
	Please check that gdlib-config is in your default path, check out
	LD_LIBRARY_PATH or equivalent variable.
	Or this might also be that your gdlib-config has other name.
	Please try again with --with-gdlib-config=/usr/bin/gdlib-config
	(replace /usr/bin/gdlib-config with a valid path to your gdlib-config).
	If you use compiled packages check if you have devel pack installed.
	To download the latest version check http://www.boutell.com/gd
	for sources.
    ])
	CAS_DEFS=""
])

else
	CAS_DEFS=""
	GDLIB_LIBS=""
	GDLIB_CFLAGS=""
	GDLIB_LDFLAGS=""
	GDLIB_VERSION="not_needed"
fi

AC_SUBST(CAS_DEFS)

AS_IF([test x$WEB = xyes], [AC_CHECK_REGEX(, [WEB=disabled])])
if test x$WEB = xyes; then
# Check for libpng
AM_OPTIONS_LIBPNGCONFIG
AM_PATH_LIBPNGCONFIG([1.2.0], [AMULEWEB_DEFS="-DWITH_LIBPNG"],
[
    AC_MSG_NOTICE([
	WARNING: libpng-devel >= 1.2.0 is needed for amuleweb
    ])
	AMULEWEB_DEFS=""
])

else
	AMULEWEB_DEFS=""
	LIBPNG_LIBS=""
	LIBPNG_CFLAGS=""
	LIBPNG_CXXFLAGS=""
	LIBPNG_LDFLAGS=""
	LIBPNG_VERSION="not_needed"
fi

AC_SUBST(AMULEWEB_DEFS)


# Check for perl File::Copy
AC_MSG_CHECKING([for File::Copy])
   if perl -e "require File::Copy" 2>/dev/null; then
       AC_MSG_RESULT([ok])
   else
       AC_MSG_ERROR([File::Copy perl module is required])
   fi


# Check if we need the GUI
AC_MSG_CHECKING([whether we need the GUI])
AS_IF([test x$MONOLITHIC = xyes], [need_gui=yes])
AS_IF([test x$WXCAS = xyes], [need_gui=yes])
AS_IF([test x$ALC = xyes], [need_gui=yes])
AS_IF([test x$AMULE_GUI = xyes], [need_gui=yes])
AS_IF([test ${need_gui:+set} != xset], [need_gui=no])
AC_MSG_RESULT($need_gui)


# Check for GeoIP (required for IP2Country capability)
if test x"$ENABLE_IP2COUNTRY" = x"yes" ; then
	GEOIP_LIB="-lGeoIP"
	CXXFLAGS="$CXXFLAGS $GEOIP_INCLUDE"
	LIBS="$LIBS $GEOIP_LIB"
	AC_CHECK_HEADER(GeoIP.h,,
		[AC_MSG_ERROR([--enable-geoip passed to configure, but the GeoIP header files were not found])])
	AC_CHECK_LIB(GeoIP, GeoIP_open,
		[AC_DEFINE(SUPPORT_GEOIP, 1, Define if you want GeoIP support.)],
		[AC_MSG_ERROR([--enable-geoip passed to configure, but the GeoIP libraries were not found])])
fi
AC_SUBST(GEOIP_INCLUDE)
AC_SUBST(GEOIP_LIB)


# Check if the compiler is broken, wrt. exceptions.
CHECK_EXCEPTIONS

# Check for wx
WX_CONFIG_OPTIONS
WX_STANDARD_OPTIONS([toolkit,wxshared,wxdebug,wxversion])
# Force using a static wxWidgets library if the executable is to be linked statically.
AS_IF([test "$USE_DEBUG_STATIC" = "yes"], [WX_SHARED=0])
# Force using a unicode build of the library
WX_UNICODE=1
DEBUG=$WX_DEBUG
WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS
WX_CONFIG_CHECK([2.8.0], [wxWin=1],,, [$WXCONFIG_FLAGS])
if test "$wxWin" != 1; then
	AC_MSG_ERROR([
		wxWidgets must be installed on your system but wx-config 
		script couldn't be found. Please check that wx-config is 
		in path or specified by --with-wx-config=path flag, the 
		directory where wxWidgets libraries are installed (returned 
		by 'wx-config --libs' command) is in LD_LIBRARY_PATH or
		equivalent variable and wxWidgets version is 2.8.0 or above.
	])
fi
WX_DETECT_STANDARD_OPTION_VALUES
AM_WXCONFIG_LARGEFILE

dnl Get flags for windres
if test x$SYS = xwin32; then
	AC_CHECK_TOOL([RC], [windres], [:])
	AC_ARG_VAR([RC], [Win32 Resource Compiler])
	RCFLAGS=`$WX_CONFIG_WITH_ARGS --cflags | $AWK ['{ for (i = 1; i <= NF; i++) if (index($i, "-I") != 1 && index($i, "-D") != 1) $i = ""; print }']`
else
	RCFLAGS=""
fi
AC_SUBST(RCFLAGS)

# Check for Crypto++
AM_OPTIONS_CRYPTO

CHECK_CRYPTO(5.1)

CXXFLAGS="$CXXFLAGS $CRYPTO_PP_CXXFLAGS"
LDFLAGS="$LDFLAGS $CRYPTO_PP_LDFLAGS"
CRYPTOLIBS="-l$CRYPTO_PP_LIB_NAME"

case "$CRYPTO_PP_STYLE" in
	gentoo_debian | installed | sources)
		;;
	*) AC_MSG_ERROR([
          WARNING: crypto++ >= $min_crypto_version is not found.
          Please check that cryptopp-headers are in your default include path,
	  check out LD_LIBRARY_PATH or equivalent variable.
          Or this might also be that your cryptopp is installed on other path.
          Please try again with --with-crypto-prefix=/my_crypto_prefix
          (replace /my_crypto_prefix with a valid path to your crypto directory).
          To download the latest version check http://www.cryptopp.com for sources.
	  ])
		;;
esac

# Check for CryptoPP >= 5.5
if test $CRYPTO_PP_VERSION_NUMBER -ge "5005000"; then
	CXXFLAGS="$CXXFLAGS -D__WEAK_CRYPTO__"
fi


AC_SUBST(CRYPTOLIBS)

# Check for bfd.h (to have proper backtraces without using wxExecute)
CHECK_BFD
CHECK_EXECINFO
CHECK_CXXABI

# Ok, we have all needed libs, now checking for other stuff
AM_GNU_GETTEXT([no-libtool], [need-ngettext])
AS_IF([test $USE_INCLUDED_LIBINTL = yes], [INCINTL=-I\${top_builddir}/intl])
AC_SUBST(INCINTL)

AS_IF([test x$USE_NLS = xyes], [CHECK_AUTOPOINT([], [USE_NLS=no])])
AS_IF([test x$USE_NLS = xno -a x${enable_nls-yes} = xyes], [AC_MSG_WARN([You need to install GNU gettext/gettext-tools to compile aMule with i18n support.])])

if test "$LEX" = "flex"; then
	CHECK_FLEX_EXTENDED
else
	HAVE_FLEX_EXTENDED=no
fi

# Flush standard test results for speeding cache
AC_CACHE_SAVE

dnl -------------------------------------------------------------------------------
dnl Start of autoscan stuff
dnl -------------------------------------------------------------------------------
# Checks for header files.
AC_PATH_X
AC_FUNC_ALLOCA
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([argz.h arpa/inet.h fcntl.h inttypes.h langinfo.h libintl.h limits.h locale.h malloc.h mntent.h netdb.h netinet/in.h stddef.h  nl_types.h stdint.h stdio_ext.h stdlib.h string.h strings.h sys/ioctl.h sys/mount.h sys/param.h sys/resource.h sys/select.h sys/socket.h sys/statvfs.h sys/time.h sys/timeb.h sys/types.h unistd.h])
AC_HEADER_SYS_WAIT

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T
AC_C_VOLATILE
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_GETMNTENT
AC_PROG_GCC_TRADITIONAL
AC_FUNC_FORK
if test x$SYS != xwin32; then
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
fi
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_STRTOD
AC_FUNC_VPRINTF
dnl Some other functions that worth checking deeper:
dnl AC_FUNC_CLOSEDIR_VOID
dnl AC_FUNC_MEMCMP
dnl AC_FUNC_MMAP
dnl AC_FUNC_STAT
dnl AC_FUNC_STRTOD
dnl AC_FUNC_SETVBUF_REVERSED
dnl Anyways, do we actually USE them?
if test $cross_compiling = yes -a $gnumalloc = yes ; then
	AC_MSG_WARN([
    configure cannot check whether malloc() and realloc() are GNU libc
    compatible. You have to be ABSOLUTELY sure that they are, otherwise
    run configure with the --without-gnu-malloc switch.])
	ac_cv_func_malloc_0_nonnull=yes
	ac_cv_func_realloc_0_nonnull=yes
fi
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([__argz_count __argz_next __argz_stringify endpwent floor ftruncate getcwd gethostbyaddr gethostbyname gethostname getmntent getmntinfo getpass gettimeofday inet_ntoa localeconv memmove mempcpy memset munmap nl_langinfo pow select setlocale socket sqrt stpcpy strcasecmp strchr strcspn strdup strerror strncasecmp strstr strtoul])
#-------------------------------------------------------------------------------
# End of autoscan stuff
#-------------------------------------------------------------------------------

dnl
dnl autoscan has missed these ones. Maybe because it's win32 stuff?
dnl
AC_CHECK_FUNCS([mkdir getrlimit setrlimit])

tmp_CFLAGS="$CFLAGS"
CFLAGS="-D_XOPEN_SOURCE=600 $CFLAGS"
AC_FUNC_STRERROR_R
CFLAGS="$tmp_CFLAGS"

# Flush standard test results for speeding cache
AC_CACHE_SAVE

# Other tests

case "$USE_DEBUG" in
yes)	DEBUG_FLAGS="-g -D__DEBUG__ -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"
	AS_IF([test x$GCC = xyes], [DEBUG_FLAGS="$DEBUG_FLAGS -W -Wall -Wshadow -Wundef -ggdb -fno-inline -fmessage-length=0"])
	AS_IF([test x$SYS = xwin32], [RCFLAGS="$RCFLAGS -D__DEBUG__"])
    ;;
*)	DEBUG_FLAGS=""
	AS_IF([test x$GCC = xyes], [DEBUG_FLAGS="$DEBUG_FLAGS -W -Wall -Wshadow -Wundef"])
    ;;
esac

#aMule options

# Command line tools
case "$AMULECMD" in
yes)	;;
*)	AMULECMD="no"
	;;
esac

# For proper compilation flags

WX_LIBS=`$WX_CONFIG_WITH_ARGS --libs adv,core,net`

WXBASE_LIBS=`$WX_CONFIG_WITH_ARGS --libs net`
WXBASE_CXXFLAGS="$WX_CXXFLAGS -DwxUSE_GUI=0"
WXBASE_CFLAGS="$WX_CFLAGS -DwxUSE_GUI=0"

AC_SUBST(WXBASE_LIBS)
AC_SUBST(WXBASE_CFLAGS)
AC_SUBST(WXBASE_CXXFLAGS)

case "$USE_OPTIMIZE" in
yes)	OPTIMIZE_FLAGS="-O2"
	;;
*)	OPTIMIZE_FLAGS=""
	;;
esac

# Profiling
case "$USE_PROFILE" in
yes)	PROFILE_FLAGS="-pg"
	;;
*)	PROFILE_FLAGS=""
	;;
esac

AC_MSG_CHECKING([if the applications should be statically linked])
case "$USE_DEBUG_STATIC" in
yes)	LDFLAGS="$LDFLAGS -static"
	;;
esac
AC_MSG_RESULT($USE_DEBUG_STATIC)

# autoconf >= 2.60 already defines ${docdir}, but we always need it.
AC_MSG_CHECKING([for docdir])
if test x"$docdir" = x; then
	docdir="$datadir"/doc/"$PACKAGE_NAME"-"$PACKAGE_VERSION"
	AC_SUBST(docdir)
fi
AC_MSG_RESULT($docdir)

# Try to set the SVN checkout-date
AC_MSG_CHECKING([for SVNDATE])
if test -f "$srcdir/SVNDATE" # SVNDATE for tarballs
then
	svndate=`cat $srcdir/SVNDATE`
elif test -d $srcdir/.svn # SVNDATE for svn
then
	svndate="rev. `svnversion $srcdir | sed -e 's/[[0-9]][[0-9]]*:\(.*\)/\1/' -e 's/\([[0-9]][[0-9]]*\).*/\1/'`"
fi
AC_MSG_RESULT(${svndate:-None required})
test "$svndate" && AC_DEFINE_UNQUOTED(SVNDATE, "$svndate", [The checkout date or svn revision number.])
test x$SYS = xwin32 && test "$svndate" && RCFLAGS="$RCFLAGS -D__PRERELEASE__"
SVNDATE="$svndate"
AC_SUBST(SVNDATE)

XRCFLAGS="-Isrc"
CXXFLAGS="$CXXFLAGS $DEBUG_FLAGS $OPTIMIZE_FLAGS $PROFILE_FLAGS -DUSE_WX_EXTENSIONS"
CFLAGS="$CFLAGS $DEBUG_FLAGS $OPTIMIZE_FLAGS $PROFILE_FLAGS -DUSE_WX_EXTENSIONS"

LDFLAGS="$LDFLAGS $PROFILE_FLAGS"
dnl -lpthread is needed by Debian but FreeBSD < 5 doesnt support it
if test x$SYS != xwin32; then
	AC_MSG_CHECKING([if this is a FreeBSD 4 or earlier system])
	if test x"`uname -s`" = xFreeBSD && test 0`uname -r | cut -c 1` -lt 5; then
		LDFLAGS="$LDFLAGS -pthread"
		AC_MSG_RESULT(yes)
	else
		LDFLAGS="$LDFLAGS -lpthread"
		AC_MSG_RESULT(no)
	fi
fi

if test "$USE_NLS" = "yes" ; then
	AC_MSG_CHECKING([for requested languages])
	Generate_Langs=`echo $LINGUAS | $AWK ['OFS="\\\\|" { for (i = 1; i <= NF; ++i) $i = "\\\\." $i; print }']`
	GENERATE_MANS_TO_INSTALL(AMULE_DAEMON, docs/man/amuled)
	GENERATE_MANS_TO_INSTALL(AMULECMD, docs/man/amulecmd)
	GENERATE_MANS_TO_INSTALL(WEB, docs/man/amuleweb)
	GENERATE_MANS_TO_INSTALL(AMULE_GUI, docs/man/amulegui)
	GENERATE_MANS_TO_INSTALL(CAS, src/utils/cas/docs/cas)
	GENERATE_MANS_TO_INSTALL(WXCAS, src/utils/wxCas/docs/wxcas)
	GENERATE_MANS_TO_INSTALL(ED2K, docs/man/ed2k)
	GENERATE_MANS_TO_INSTALL(ALC, src/utils/aLinkCreator/docs/alc)
	GENERATE_MANS_TO_INSTALL(ALCC, src/utils/aLinkCreator/docs/alcc)
	GENERATE_MANS_TO_INSTALL(MONOLITHIC, docs/man/amule)
	AC_MSG_RESULT([${LINGUAS:-all}])
fi

dnl
dnl Denoiser
dnl
AC_MSG_CHECKING([denoising level])
AS_IF([test "$denoiselevel" = "yes"], [denoiselevel=5])dnl
AS_IF([test "$denoiselevel" = "no"], [denoiselevel=0])dnl
AS_IF([test $denoiselevel -gt 4], [AS_IF([test "${svndate:+set}" = "set"], [denoiselevel=0], [denoiselevel=4])])dnl
AC_MSG_RESULT($denoiselevel)

AC_CONFIG_COMMANDS(denoiser, [[	if test $level -gt 0; then
		if test ! -d src/utils/scripts; then mkdir -p src/utils/scripts; fi
		sed -e "1{x;s/.*/1/;x;};/^[ 	]*\$/d;/^#if /{/level.*$level/{x;s/^/1/;x;b0;};x;s/^/0/;x;:0;d;};/^#else/{x;/^1/{s/1/0/;b1;};s/0/1/;:1;x;d;};/^#endif/{x;s/.//;x;d;};/^[ 	]*#/d;x;/^1/{x;b;};x;d" \
			$srcdir/src/utils/scripts/denoiser.rules > src/utils/scripts/denoiser.sed
		for i in `find . -name 'Makefile' -print`; do
			if test -n "`head -n 1 $i | grep '^#'`"; then
				sed -f src/utils/scripts/denoiser.sed $i > $i.tmp && mv $i.tmp $i
			fi
		done
	fi]], [level=$denoiselevel])


AM_CONDITIONAL(WEB, test x$WEB = xyes)
AM_CONDITIONAL(ED2K, test x$ED2K = xyes)
AM_CONDITIONAL(CAS, test x$CAS = xyes)
AM_CONDITIONAL(WXCAS, test x$WXCAS = xyes)
AM_CONDITIONAL(ALC, test x$ALC = xyes)
AM_CONDITIONAL(ALCC, test x$ALCC = xyes)
AM_CONDITIONAL(AMULE_GUI, test x$AMULE_GUI = xyes)
AM_CONDITIONAL(AMULE_DAEMON, test x$AMULE_DAEMON = xyes)
AM_CONDITIONAL(COMPILE_CMD, test x$AMULECMD = xyes)
AM_CONDITIONAL(MONOLITHIC, test x$MONOLITHIC = xyes)
AM_CONDITIONAL(ENABLE_UPNP, test x$ENABLE_UPNP = xyes -a x$SYS != xwin32)
AM_CONDITIONAL(ENABLE_IP2COUNTRY, test x$ENABLE_IP2COUNTRY = xyes)
AM_CONDITIONAL(SYS_WIN32, test x$SYS = xwin32)
AM_CONDITIONAL(NEED_RC, test x$SYS = xwin32 -a "$RC" != ":")
AM_CONDITIONAL(NEED_CORESERVICES, test x$SYS = xdarwin)
AM_CONDITIONAL(COMPILE_NLS, test x$USE_NLS = xyes)
AM_CONDITIONAL(GENERATE_FLEX_HEADER, test x$HAVE_FLEX_EXTENDED = xyes)

dnl
dnl Check for readline library
dnl
if test x$AMULECMD = xyes -o x$WEB = xyes; then
	VL_LIB_READLINE
fi

# DO NOT MOVE UP... THERE'S A REASON TO BE HERE!!

AM_OPTIONS_CCACHE_PFX

AC_MSG_CHECKING([whether ccache support should be added])
AC_MSG_RESULT($ccache)
AC_SUBST(ccache)

case "$ccache" in

yes)
	CHECK_CCACHE
	if [[ $CCACHE = 0 ]]; then
		GCC="$ccache_prefix/ccache $GCC"
		CC="$ccache_prefix/ccache $CC"
		GXX="$ccache_prefix/ccache $GXX"
		CXX="$ccache_prefix/ccache $CXX"
		BUILD_CC="$ccache_prefix/ccache $BUILD_CC"
	fi
esac

dnl
dnl Generate the Makefiles
dnl
AC_CONFIG_FILES([Makefile
		 docs/Makefile
		 docs/man/Makefile
		 intl/Makefile
		 src/Makefile
		 src/pixmaps/Makefile
		 src/pixmaps/flags_xpm/Makefile
		 src/libs/Makefile
		 src/libs/ec/Makefile
		 src/libs/ec/cpp/Makefile
		 src/libs/common/Makefile
		 src/utils/Makefile
		 src/utils/aLinkCreator/Makefile
		 src/utils/aLinkCreator/docs/Makefile
		 src/utils/aLinkCreator/src/Makefile
		 src/utils/cas/Makefile
		 src/utils/cas/docs/Makefile
		 src/utils/fileview/Makefile
		 src/utils/wxCas/Makefile
		 src/utils/wxCas/docs/Makefile
		 src/utils/wxCas/src/Makefile
		 src/utils/xas/Makefile
		 src/utils/xas/autostart-xas
		 src/utils/xas/docs/Makefile
		 src/skins/Makefile
		 src/webserver/Makefile
		 src/webserver/src/Makefile
		 src/webserver/default/Makefile
		 src/webserver/php-default/Makefile
		 src/webserver/chicane/Makefile
		 src/webserver/litoral/Makefile
		 unittests/Makefile
		 unittests/muleunit/Makefile
		 unittests/tests/Makefile])
dnl
dnl autoscan has missed these, i wonder why...
dnl
AC_CONFIG_FILES([po/Makefile.in
		 Compilation.flags])
AS_IF([test x$SYS = xwin32], [AC_CONFIG_FILES([version.rc])])
AC_OUTPUT

echo
echo
echo "  Configure script has finished system check."
echo
echo "  Configured aMule ${PACKAGE_VERSION} for '${host}'."
echo
echo "  aMule enabled options:"
echo 
echo "  **** aMule Core ****" 
echo "  Prefix where aMule should be installed?                    ${prefix:-none}"
echo "  Should aMule be compiled with i18n support?                ${USE_NLS:-no}"
echo "  Should aMule be compiled in debug mode?                    ${USE_DEBUG:-no}"
echo "  Should aMule be compiled with profiling?                   ${USE_PROFILE:-no}"
echo "  Should aMule be compiled with optimizations?               ${USE_OPTIMIZE:-no}"
echo "  Should aMule be compiled with UPnP support?                ${ENABLE_UPNP:-yes}"
echo "  Should aMule be compiled with IP2country support?          ${ENABLE_IP2COUNTRY:-yes}"
echo "  Should aMule monolithic application be built?              ${MONOLITHIC:-yes}"
echo "  Should aMule daemon version be built?                      ${AMULE_DAEMON:-no}"
echo "  Should aMule remote gui be built? (EXPERIMENTAL)           ${AMULE_GUI:-no}"
echo "  Crypto++ library/headers style?                            ${CRYPTO_PP_STYLE:-not found}"

echo
echo "  **** aMule TextClient ****"
echo "  Should aMule Command Line Client be built?                 ${AMULECMD:-no}"
echo
echo "  **** aMule WebServer ****"
echo "  Should aMule WebServer be built?                           ${WEB:-no}"
echo
echo "  **** aMule ED2K Links Handler ****"
echo "  Should aMule ED2K Links Handler be built?                  ${ED2K:-yes}"
echo
echo "  **** aMuleLinkCreator ****"
echo "  Should aMuleLinkCreator GUI version (alc) be built?        ${ALC:-no}"
echo "  Should aMuleLinkCreator for console (alcc) be built?       ${ALCC:-no}"
echo
echo "  **** aMule Statistics ****"
echo "  Should C aMule Statistics (CAS) be built?                  ${CAS:-no}"
echo "  Should aMule GUI Statistics (wxCas) be built?              ${WXCAS:-no}"

echo
echo "  **** General Libraries and Tools ****"
echo "  Should ccache support be enabled?                          ${ccache:-no}"
echo "  Libraries aMule will use to build:"
wxinfo="$WX_PORT"
AS_IF([test $WX_DEBUG -eq 1], [wxinfo="$wxinfo,debug"])
AS_IF([test $WX_SHARED -eq 1], [wxinfo="$wxinfo,shared"], [wxinfo="$wxinfo,static"])
echo "                                       wxWidgets             ${WX_VERSION_FULL} ($wxinfo)"
echo "                                       crypto++              ${CRYPTO_PP_VERSION_STRING} (${CRYPTO_PP_STYLE})"
if test x${WEB:-no} != xno; then
AS_IF([test $regex_found = no], [regex_found="Not detected"],
[AS_IF([test x$REGEX_LIB = x], [regex_found=system], [regex_found="standalone (in $REGEX_LIB)"])])
echo "                                       regex                 $regex_found"
fi
if test ${enable_nls-yes} = yes; then
AS_IF([test x$USE_NLS = xno], [libintl_found="Not detected"],
[AS_IF([test x$USE_INCLUDED_LIBINTL = xyes], [libintl_found="included"], [libintl_found="system"])])
echo "                                       libintl               $libintl_found"
fi
if test x$LIBPNG_VERSION != xnot_needed; then
echo "                                       libpng                ${LIBPNG_VERSION:-Not detected}"
fi
if test x$GDLIB_VERSION != xnot_needed; then
echo "                                       libgd                 ${GDLIB_VERSION:-Not detected}"
fi
echo "                                       zlib                  ${ZLIB_VERSION:-Not detected}"
if test x$WEB = xdisabled; then
echo ""
echo ""
echo "WARNING! amuleweb has been disabled because configure could not find"
echo "a POSIX compliant regex library."
echo ""
fi
if test x"$LIBPNG_VERSION" = x""; then
echo ""
echo ""
echo " WARNING! libpng >= 1.2.0 not found."
echo " amuleweb will be compiled but file download progress bar images will NOT be generated."
echo ""
fi
